const { InputEmail, ButtonLogin, InputPassword } = require("./Login");
const { NewPage, PageMenu, PagePreview,PageTitlePreview } = require("./PageEditor");


const {
  ButtonBack,
  DivPublish,
  TextAreaTitle,
  ButtonPublish,
  ButtonSchedule,
  ButtonDeletePost,
  SpanSettingsMenu,
  ButtonPostSettings,
  RadioButtonSchedule,
  ButtonConfirmDeletePost,
  ButtonPublishConfirmation,
  ButtonScheduleConfirmation,
  AllOption,
  DraftOption,
  PublishedOption,
  ScheduledOption,
  FilterByStatus,
  ListPostItem,
  OlPostList,
  PostItemTitle,
  NewPost,DraftToPublish,
  ListElements,
  TagNewTagButton,
  TagNameInput,
  TagColorInput,
  TagSlugInput,
  TagDescriptionInput,
  TagSaveButton,
  TagMenuManage,
  TagList,
  MemberNewTagButton,
  MemberNameInput,
  MemberEmailInput,
  MemberSaveButton,
  MemberMenuManage,
  MemberList,
  MemberErrorEmailMessage,
  MemberFirstRowList,
  MemberListEmpty,
  MemberListExists,
  TagFirstRowList,
  TagListExists,
  ImageButton,
  unsplashimage ,
  metadatabutton,
  MetaTitle,
  MetaDescription
} = require("./PostEditor");


module.exports = {
  InputEmail,
  ButtonLogin,
  InputPassword,
  NewPost,
  ButtonBack,
  DivPublish,
  TextAreaTitle,
  ButtonPublish,
  ButtonSchedule,
  ButtonDeletePost,
  SpanSettingsMenu,
  ButtonPostSettings,
  RadioButtonSchedule,
  ButtonConfirmDeletePost,
  ButtonPublishConfirmation,
  ButtonScheduleConfirmation,
  PostItemTitle,
  AllOption,
  DraftOption,
  PublishedOption,
  ScheduledOption,
  FilterByStatus,
  ListPostItem,
  OlPostList,
  DraftToPublish,
  NewPage,
  PageMenu,
  PagePreview,
  ListElements,
  PageTitlePreview,
  TagNewTagButton,
  TagNameInput,
  TagColorInput,
  TagSlugInput,
  TagDescriptionInput,
  TagSaveButton,
  TagMenuManage,
  TagList,
  MemberNewTagButton,
  MemberNameInput,
  MemberEmailInput,
  MemberSaveButton,
  MemberMenuManage,
  MemberList,
  MemberErrorEmailMessage,
  MemberFirstRowList,
  MemberListEmpty,
  MemberListExists,
  TagFirstRowList,
  TagListExists,
  ImageButton,
  unsplashimage,
  metadatabutton,
  MetaTitle,
  MetaDescription
};